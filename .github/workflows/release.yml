name: release

on:
  workflow_dispatch:
    inputs:
      forced-version:
        description: Manually set the version following the format `1.2.3`. If not set, the version will be determined based on conventional commits since the latest tag.
        required: false
        default: ''
        type: string
      is-draft:
        description: Create the release as a draft.
        default: true
        type: boolean
      is-auto-close-sonatype-staging:
        description: Close the Sonatype staging repository automatically after publishing. If false, you will need to close and release the staging repository at https://central.sonatype.com/publishing/deployments.
        default: false
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Fail if branch is not main
        if: github.ref != 'refs/heads/main'
        run: |
          echo "This workflow should only be triggered on main branch.
          exit 1

      - name: Get Next Version
        id: semver
        uses: ietf-tools/semver-action@v1
        if: github.event.inputs.forced-version == ''
        with:
          token: ${{ github.token }}
      - name: Validate manual version
        if: github.event.inputs.forced-version != ''
        run: |
          if [[ ! "${{ github.event.inputs.forced-version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo Manual version not following the format 1.2.3 without the 'v' prefix.
            exit 1
          fi

      - name: Checkout the repo
        uses: actions/checkout@v5
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: ./gradlew build
        env:
          ORG_GRADLE_PROJECT_version: ${{ github.event.inputs.forced-version || steps.semver.outputs.nextStrict }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: Publish library release
        run: ./gradlew publishToMavenCentral
        env:
          ORG_GRADLE_PROJECT_version: ${{ github.event.inputs.forced-version || steps.semver.outputs.nextStrict }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralAutomaticPublishing: ${{ github.event.inputs.is-auto-close-sonatype-staging }}

      - name: Publish plugin release
        run: ./gradlew publishPlugins
        env:
          ORG_GRADLE_PROJECT_version: ${{ github.event.inputs.forced-version || steps.semver.outputs.nextStrict }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PLUGIN_PORTAL_API_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PLUGIN_PORTAL_API_SECRET }}

      - name: Create release
        if: ${{ github.event.inputs.is-draft == 'false' }}
        run: gh release create "v${{ github.event.inputs.forced-version || steps.semver.outputs.nextStrict }}" ./*/build/libs/*.jar --generate-notes --fail-on-no-commits --target "${GITHUB_REF}"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Create draft release
        if: ${{ github.event.inputs.is-draft == 'true' }}
        run: gh release create "v${{ github.event.inputs.forced-version || steps.semver.outputs.nextStrict }}" ./*/build/libs/*.jar --generate-notes --draft --fail-on-no-commits --target "${GITHUB_REF}"
        env:
          GH_TOKEN: ${{ github.token }}
